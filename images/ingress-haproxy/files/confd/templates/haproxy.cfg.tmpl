global
  presetenv HA_MAXCONN              4000
  presetenv HA_MAXCONNRATE          2000
  presetenv HA_RETRIES              3
  presetenv HA_LIMITTER_WHITELIST   127.0.0.1

  ca-base /usr/local/etc/haproxy/ssl
  crt-base /usr/local/etc/haproxy/ssl

  stats socket /tmp/haproxy-admin.socket mode 600 level admin expose-fd listeners

  pidfile /tmp/haproxy.pid
  maxcompcpuusage          98

  tune.ssl.default-dh-param 2048

  # lower the record size to improve Time to First Byte (TTFB)
  tune.ssl.maxrecord       1419

  # see https://wiki.mozilla.org/Security/Server_Side_TLS - Modern is used here
  ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
  ssl-default-bind-options no-sslv3 no-tlsv10

  maxconn     ${HA_MAXCONN}
  maxconnrate ${HA_MAXCONNRATE}
  ulimit-n    65536
  # debug
  log         127.0.0.1 local0 debug

defaults
  log         global
  mode        http

  retries     ${HA_RETRIES}

{{ range ls "/defaults/options" }}
  option {{ . }}
{{ else }}
  option  dontlognull
  option  splice-response
  option  http-keep-alive
  option  http-server-close
  option  clitcpka
  option  srvtcpka
  option  tcp-smart-accept
  option  tcp-smart-connect
  option  contstats
  option  forwardfor
{{ end }}

{{ range gets "/defaults/timeouts/*" }}
  timeout {{ .Key }}      {{ .Value }}
{{ else }}
  timeout http-request    5s
  timeout connect         5s
  timeout server          10s
  timeout client          30s
  timeout http-request    5s
  timeout http-keep-alive 20s
  timeout connect         5s
  timeout client          60s
  timeout client-fin      60s
  timeout tunnel          60m
  timeout server          150s
  timeout tarpit          15s
  timeout queue           10s
{{ end }}

  balance roundrobin

  ### log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r

{{ if exists "/listen/stats/bind" }}
listen stats
  bind  {{ getv "/listen/stats/bind" }} ssl crt {{ getv "/listen/stats/crt" }} ca-file {{ getv "/listen/stats/ca" }} verify required
  mode  http
  stats enable
  stats hide-version
  stats refresh 20s
  stats uri /stats?hastats
  stats realm   Private
  stats auth    {{ getv "/listen/stats/user" }}:{{ getv "/listen/stats/password" }}
{{ end }}

frontend ft_web
  bind *:8080
  {{ if exists "/configs/ssl/enabled" }}
  bind *:8443 tfo ssl no-sslv3 no-tlsv10 no-tlsv11 npn http/1.1 {{ range gets "/entrypoints/*" }}{{ $config := json .Value }}{{ if $config.ssl }} {{ $config.ssl }}{{ end }}{{ end }}
  {{ end }}

  ### option tcplog

  {{ if exists "/configs/limitter" }}
  stick-table type ip size 2m expire 10s store gpc0,conn_rate(3s),http_req_rate(4s),http_err_rate(4s)
  acl white_list src "${HA_LIMITTER_WHITELIST}"
  tcp-request connection track-sc1 src
  tcp-request connection reject if { src_get_gpc0 gt 0 } !white_list
  {{ end }}

  {{ if exists "/configs/rate_limitter" }}
  rate-limit sessions {{ getv "/configs/rate_limitter" }}
  {{ end }}

{{ range gets "/entrypoints/*" }}{{ $config := json .Value }}

  {{ if $config.url }}
  acl stack_{{ base .Key }}_url path_beg {{ $config.url }}
  {{ end }}

  acl stack_{{ base .Key }}_host hdr(host) -i {{ $config.host }}

  {{ if exists "/configs/ssl/enabled" }}
  acl stack_{{ base .Key }}_host req_ssl_sni -i {{ $config.host }}
  {{ end }}

{{ end }}

  unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
  unique-id-header X-Unique-ID

{{ range gets "/entrypoints/*" }}{{ $config := json .Value }}

  {{ if $config.url }}
  use_backend backend_stack_{{ $config.service }} if stack_{{ base .Key }}_host stack_{{ base .Key }}_url
  {{ else }}
  use_backend backend_stack_{{ $config.service }} if stack_{{ base .Key }}_host
  {{ end }}

{{ end }}

  default_backend bk_web

{{ range gets "/services/*" }}{{ $config := json .Value }}

backend backend_stack_{{ base .Key }}

  {{ if exists "/configs/limitter" }}{{ if $config.limitter }}
  acl abuse src_http_req_rate(ft_web) ge {{ $config.limitter }}
  acl flag_abuser src_inc_gpc0(ft_web) ge 0
  http-request deny if abuse flag_abuser
  {{ end }}{{ end }}

  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }

  {{ $name := base .Key }}{{ range $index, $host := $config.hosts }}
  server svc_{{ $name }}{{ $index }} {{ .host }} {{ if .options }}{{ .options }}{{ end }}
  {{ end }}

{{ end }}

backend bk_web
  http-response set-status 503 reason "Service Unavailable"
